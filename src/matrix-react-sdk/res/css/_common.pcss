/*
Copyright 2015, 2016 OpenMarket Ltd
Copyright 2017 Vector Creations Ltd
Copyright 2017 - 2019 New Vector Ltd
Copyright 2019 - 2021 The Matrix.org Foundation C.I.C

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

@import "./_font-sizes.pcss";
@import "./_font-weights.pcss";
@import "./_animations.pcss";
@import "./_spacing.pcss";
@import url("maplibre-gl/dist/maplibre-gl.css");

$hover-transition: 0.08s cubic-bezier(0.46, 0.03, 0.52, 0.96); /* quadratic */

$selected-message-border-width: 4px;

$MessageTimestamp_width: 46px; /* 8 + 30 (avatar) + 8 */
$MessageTimestamp_width_hover: calc($MessageTimestamp_width - 2 * $selected-message-border-width);

$slider-dot-size: 1em;
$slider-selection-dot-size: 2.4em;

$container-border-width: 8px;
$container-gap-width: 8px; /* only even numbers should be used because otherwise we get 0.5px margin values. */

$timeline-image-border-radius: 8px;

// 消息面板 & 右侧面板header高度(content-box)
$panel-header-height: 52px;


:root {
    font-size: 10px;

    --transition-short: 0.1s;
    --transition-standard: 0.3s;
    --MessageTimestamp-width: $MessageTimestamp_width;
    --buttons-dialog-gap-row: $spacing-12;
    --buttons-dialog-gap-column: $spacing-12;
}

@media only percy {
    :root {
        --percy-color-avatar: $username-variant2-color;
        --percy-color-displayName: $username-variant1-color;
        --percy-color-replyChain-border: $username-variant1-color;
    }
}

@media (prefers-reduced-motion) {
    :root {
        --transition-short: 0;
        --transition-standard: 0;
    }
}

html {
    /* hack to stop overscroll bounce on OSX and iOS.
       N.B. Breaks things when we have legitimate horizontal overscroll */
    height: 100%;
    overflow: hidden;
    /* Stop similar overscroll bounce in Firefox Nightly for macOS */
    overscroll-behavior: none;
}

body {
    font-family: $font-family;
    font-size: $font-15px;
    background-color: $background;
    color: $primary-content;
    border: 0px;
    margin: 0px;
    box-sizing: border-box;

    /* needed to match the designs correctly on macOS */
    /* see https://github.com/vector-im/element-web/issues/11425 */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

* {
    margin: 0;
    padding: 0;
    outline: none;
}

ul, ol, li {
    list-style: none;
}

pre,
code {
    font-family: $monospace-font-family;
    font-size: 100% !important;
}

.error,
.warning,
.text-error,
.text-warning {
    color: $alert;
}

.text-success {
    color: $accent;
}

.text-muted {
    color: $muted-fg-color;
}

b {
    /* On Firefox, the default weight for `<b>` is `bolder` which results in no bold */
    /* effect since we only have specific weights of our fonts available. */
    font-weight: bold;
}

h2 {
    color: $primary-content;
    font-weight: 400;
    font-size: $font-18px;
    margin-top: 16px;
    margin-bottom: 16px;
}

a:hover,
a:link,
a:visited {
    color: $text-primary-color4;
}

/* Override Firefox's UA style so we get a consistent look across browsers */
input::placeholder,
textarea::placeholder {
    opacity: initial;
}



input[type="text"]:focus,
input[type="password"]:focus,
textarea:focus {
    outline: none;
    box-shadow: none;
}

/* This is used to hide the standard outline added by browsers for */
/* accessible (focusable) components. Not intended for buttons, but */
/* should be used on things like focusable containers where the outline */
/* is usually not helping anyone. */
*:focus:not(.focus-visible) {
    outline: none;
}

/* override defaults */
fieldset {
    display: inline-block;
    margin-inline: unset;
    padding-block: unset;
    padding-inline: unset;
    min-inline-size: unset;
    border: none;
}

summary {
    cursor: pointer;
}

legend {
    padding-inline: unset;
    border: none;
}

@define-mixin MaskIcon $iconImage, $iconWidth, $iconHeight, $iconColor: $icon-primary-color {
    position: relative;
    &:before {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        width: $iconWidth;
        height: $iconHeight;
        transform: translate(-50%, -50%);
        background: $iconColor;
        mask: $iconImage no-repeat center;
        mask-size: 100% auto;
    }
}

@define-mixin HalfPxBorder $borderColor, $borderRadius: 0 {
    position: relative;
    width: unset;
    height: unset;
    border-radius: $borderRadius;
    &:before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        box-sizing: border-box;
        width: 200%;
        height: 200%;
        border: 1px solid $borderColor;
        border-radius: calc(2 * $borderRadius);
        transform-origin: 0 0;
        transform: scale(0.5);
    }
}

/*** panels ***/
.dark-panel {
    background-color: $dark-panel-bg-color;

    :not(.mx_textinput):not(.mx_Field):not(.mx_no_textinput) > input[type="text"],
    :not(.mx_textinput):not(.mx_Field):not(.mx_no_textinput) > input[type="search"],
    .mx_textinput {
        color: $input-darker-fg-color;
        background-color: $background;
        border: none;
    }
}

.light-panel {
    :not(.mx_textinput):not(.mx_Field):not(.mx_no_textinput) > input[type="text"],
    :not(.mx_textinput):not(.mx_Field):not(.mx_no_textinput) > input[type="search"],
    .mx_textinput {
        color: $input-darker-fg-color;
        background-color: $input-lighter-bg-color;
        border: none;
    }
}

/* Prevent ugly dotted highlight around selected elements in Firefox */
::-moz-focus-inner {
    border: 0;
}

/* These are magic constants which are excluded from tinting, to let themes */
/* (which only have CSS) tell the app what their non-tinted */
/* colourscheme is by inspecting the stylesheet DOM. */
/* They are not used for layout!! */
#mx_theme_accentColor {
    color: $accent;
}

#mx_theme_secondaryAccentColor {
    color: $secondary-accent-color;
}

/* Expected z-indexes for dialogs:
    4000 - Default wrapper index
    4009 - Static dialog background
    4010 - Static dialog itself
    4011 - Standard dialog background
    4012 - Standard dialog itself

   These are set up such that the static dialog always appears
   underneath the standard dialogs.
 */

.mx_Dialog_wrapper {
    position: fixed;
    z-index: 4000;
    top: 0;
    left: 0;
    width: 100%;
    width: 100%;
    height: 100%;

    display: flex;
    align-items: center;
    justify-content: center;
}

.mx_Dialog {
    position: relative;
    z-index: 4012;
    background: $dialog-bg;
    backdrop-filter: blur(20px);
    box-shadow: $dialog-shadow;
    border-radius: 20px;
    overflow: hidden;
    font-size: $font-15px;
    .mx_Dialog_fixedWidth {
        width: 454px;
        max-width: 704px;
        overflow-x: hidden;
    }
    &.mx_Dialog_fullScreen {
        width: 100vw;
        height: 100vh;
        border-radius: 0;
        .mx_Dialog_content {
            max-height: unset;
        }
    }
    &.mx_Dialog_inApp:not(.mx_Dialog_fullScreen) {
        max-width: 90%;
        .mx_Dialog_fixedWidth {
            width: 100%;
            max-width: unset;
        }
    }
}


/* Styles copied/inspired by GroupLayout, ReplyTile, and EventTile variants. */
.mx_Dialog .markdown-body {
    font-family: inherit !important;
    white-space: normal !important;
    line-height: inherit !important;
    color: inherit; /* inherit the colour from the dark or light theme by default (but not for code blocks) */
    font-size: $font-14px;

    pre,
    code {
        font-family: $monospace-font-family !important;
        background-color: $codeblock-background-color;
    }

    /* this selector wrongly applies to code blocks too but we will unset it in the next one */
    code {
        white-space: pre-wrap; /* don't collapse spaces in inline code blocks */
    }

    pre code {
        white-space: pre; /* we want code blocks to be scrollable and not wrap */

        > * {
            display: inline;
        }
    }

    pre {
        /* have to use overlay rather than auto otherwise Linux and Windows */
        /* Chrome gets very confused about vertical spacing: */
        /* https://github.com/vector-im/vector-web/issues/754 */
        overflow-x: overlay;
        overflow-y: visible;

        &::-webkit-scrollbar-corner {
            background: transparent;
        }
    }
}

.mx_Dialog .markdown-body h1,
.mx_Dialog .markdown-body h2,
.mx_Dialog .markdown-body h3,
.mx_Dialog .markdown-body h4,
.mx_Dialog .markdown-body h5,
.mx_Dialog .markdown-body h6 {
    font-family: inherit !important;
    color: inherit;
}

/* Make h1 and h2 the same size as h3. */
.mx_Dialog .markdown-body h1,
.mx_Dialog .markdown-body h2 {
    font-size: 1.5em;
    border-bottom: none !important; /* override GFM */
}

.mx_Dialog .markdown-body a {
    color: $accent-alt;
}

.mx_Dialog .markdown-body blockquote {
    border-left: 2px solid $blockquote-bar-color;
    border-radius: 2px;
    padding: 0 10px;
}



.mx_Dialog_staticWrapper .mx_Dialog {
    z-index: 4010;
    contain: content;
}

.mx_Dialog_background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(21, 21, 21, 0.40);
    z-index: 4011;
    &.mx_Dialog_staticBackground {
        z-index: 4009;
    }
}

.mx_Dialog_wrapperWithStaticUnder .mx_Dialog_background {
    /* Roughly half of what it would normally be - we don't want to black out */
    /* the app, just make it clear that the dialogs are stacked. */
    opacity: 0.4;
}

.mx_Dialog_lightbox .mx_Dialog_background {
    opacity: $lightbox-background-bg-opacity;
    background-color: $lightbox-background-bg-color;
    animation-name: mx_Dialog_lightbox_background_keyframes;
    animation-duration: 300ms;
}

.mx_Dialog_lightbox .mx_Dialog {
    border-radius: 0px;
    background-color: transparent;
    width: 100%;
    height: 100%;
    max-width: 100%;
    max-height: 100%;
    pointer-events: none;
    padding: 0;
}

.mx_Dialog_header {
    position: relative;
    padding: 18px;
    background: rgba($background-primary1-secondary-color2, 0.1);
    border-bottom: 1px solid $border-primary-color;
}

.mx_Dialog_titleImage {
    vertical-align: sub;
    width: 25px;
    height: 25px;
    margin-left: -2px;
    margin-right: 4px;
    margin-bottom: 2px;
}

.mx_Dialog_title_box {
    display: flex;
    align-items: center;
}

.mx_Dialog_title {
    flex: 1;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    font-size: $font-18px;
    line-height: $font-26px;
    font-weight: $font-semi-bold;
    color: $dialog-title-color;
}

.mx_Dialog_description {
    margin-top: 4px;
    font-size: $font-14px;
    line-height: $font-20px;
    font-weight: $font-normal-bold;
    color: $dialog-description-color;
}

.mx_Dialog_header.mx_Dialog_headerWithButton > .mx_Dialog_title {
    text-align: center;
}

.mx_Dialog_header.mx_Dialog_headerWithCancelOnly {
    padding: 0 20px 0 0;
    margin: 0;
}

.mx_Dialog_title.danger {
    color: $alert;
}

@define-mixin customisedCancelButton {
    position: relative;
    box-sizing: border-box;
    width: unset;
    height: unset;
    cursor: pointer;
    &:after {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        width: 10px;
        height: 10px;
        transform: translate(-50%, -50%);
        mask: url("$(res)/img/cancel.svg");
        mask-repeat: no-repeat;
        mask-position: center;
        mask-size: 100% auto;
        background-color: $dialog-close-fg-color;
    }

    &:hover {
        background-color: $dialog-close-external-color;
        border-radius: 50%;
        border: 0.5px solid rgba(0, 0, 0, 0.10);
    }
}

.mx_Dialog_cancelButton {
    @mixin customisedCancelButton;
    width: 26px;
    height: 26px;
}

.mx_Dialog_content {
    box-sizing: border-box;
    max-height: 400px;
    overflow-y: auto;
    padding: 20px 18px;
}

.mx_Dialog_footer {
    padding: 18px;
    border-top: 1px solid $border-primary-color;
}

.mx_Dialog_buttons {
    display: flex;
    align-items: center;
    margin-inline-start: auto;
    .mx-btn-text {
        &.mx-btn-size-default {
            padding: 0 12px;
        }
    }
}

.mx_Dialog_buttons_additive {
    /* The consumer is responsible for positioning their elements. */
    flex: 1;
}

.mx_Dialog_buttons_row {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-end;
    text-align: initial;
    margin-inline-start: auto;

    /* default gap among elements */
    column-gap: var(--buttons-dialog-gap-column);
    row-gap: var(--buttons-dialog-gap-row);

    button {
        margin: 0 !important; /* override the margin settings */
    }
}





/* Spinner Dialog overide */
.mx_Dialog_wrapper.mx_Dialog_spinner .mx_Dialog {
    width: auto;
    border-radius: 8px;
    padding: 8px;
    box-shadow: none;

    /* Don't show scroll-bars on spinner dialogs */
    overflow-x: hidden;
    overflow-y: hidden;
}

.mx_DialogDesignChanges_wrapper .mx_Dialog_fixedWidth {
    max-width: 636px; /* match splash image width */

    .mx_AccessibleButton_kind_link {
        font-size: inherit;
        padding: 0;
    }
}

/* TODO: Review mx_GeneralButton usage to see if it can use a different class */
/* These classes were brought in from the old UserSettings and are included here to avoid */
/* breaking the app. */
/* Ref: https://github.com/vector-im/element-web/issues/8420 */
.mx_GeneralButton {
    @mixin mx_DialogButton;
    display: inline;
    margin: auto;
}

.mx_GeneralButton:hover {
    @mixin mx_DialogButton_hover;
}

.mx_linkButton {
    cursor: pointer;
    color: $accent;
}

.mx_TextInputDialog_label {
    text-align: left;
    padding-bottom: 12px;
}

.mx_TextInputDialog_input {
    font-size: $font-15px;
    border-radius: 3px;
    border: 1px solid $input-border-color;
    padding: 9px;
    color: $primary-content;
    background-color: $background;
}

.mx_textButton {
    @mixin mx_DialogButton_small;
}

.mx_textButton:hover {
    @mixin mx_DialogButton_hover;
}

.mx_button_row {
    margin-top: 69px;
}

/* username colors */
/* used by SenderProfile & RoomPreviewBar */
.mx_Username_color1 {
    color: $username-variant1-color;
}

.mx_Username_color2 {
    color: $username-variant2-color;
}

.mx_Username_color3 {
    color: $username-variant3-color;
}

.mx_Username_color4 {
    color: $username-variant4-color;
}

.mx_Username_color5 {
    color: $username-variant5-color;
}

.mx_Username_color6 {
    color: $username-variant6-color;
}

.mx_Username_color7 {
    color: $username-variant7-color;
}

.mx_Username_color8 {
    color: $username-variant8-color;
}

@define-mixin mx_Tooltip_dark {
    box-shadow: none;
    background-color: $tooltip-timeline-bg-color;
    color: $tooltip-timeline-fg-color;
    border: none;
    border-radius: 3px;
    padding: 6px 8px;
}

/* This is a workaround for our mixins not supporting child selectors */
.mx_Tooltip_dark {
    .mx_Tooltip_chevron::after {
        border-right-color: $tooltip-timeline-bg-color;
    }
}

@define-mixin ProgressBarColour $colour {
    color: $colour;
    &::-moz-progress-bar {
        background-color: $colour;
    }
    &::-webkit-progress-value {
        background-color: $colour;
    }
}

@define-mixin ProgressBarBgColour $colour {
    background-color: $colour;
    &::-webkit-progress-bar {
        background-color: $colour;
    }
}

@define-mixin ProgressBarBorderRadius $radius {
    border-radius: $radius;
    &::-moz-progress-bar {
        border-radius: $radius;
    }
    &::-webkit-progress-bar,
    &::-webkit-progress-value {
        border-radius: $radius;
    }
}

@define-mixin unreal-focus {
    outline-width: 2px;
    outline-style: solid;
    outline-color: Highlight;

    /* WebKit gets its native focus styles. */
    @media (-webkit-min-device-pixel-ratio: 0) {
        outline-color: -webkit-focus-ring-color;
        outline-style: auto;
    }
}

@define-mixin ButtonResetDefault {
    appearance: none;
    background: none;
    border: none;
    padding: 0;
    margin: 0;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
    cursor: pointer;
}

@define-mixin LegacyCallButton {
    box-sizing: border-box;
    font-weight: 600;
    height: $font-24px;
    line-height: $font-24px;
    margin-right: 0;

    span {
        display: flex;
        align-items: center;

        &::before {
            content: "";
            display: inline-block;
            background-color: $button-fg-color;
            mask-position: center;
            mask-repeat: no-repeat;
            margin-right: 8px;
        }
    }
}

@define-mixin ThreadRepliesAmount {
    position: relative;
    color: $text-primary-color4;
    font-size: 12px;
    font-style: normal;
    font-weight: 500;
    line-height: 16px;
    &:hover {
        text-decoration-line: underline;
    }
}

@define-mixin ThreadSummaryIcon {
    content: "";
    display: inline-block;
    mask-image: url("$(res)/img/element-icons/thread-summary.svg");
    mask-position: center;
    mask-repeat: no-repeat;
    mask-size: contain;
    height: 18px;
    min-width: 18px;
    background-color: $secondary-content !important;
}

@define-mixin composerButtonHighLight {
    background: rgba($accent, 0.25);
    /* make the icon the accent color too */
    &::before {
        background-color: $accent !important;
    }
}

@define-mixin composerButton $border-radius, $hover-color {
    --size: 26px;
    position: relative;
    cursor: pointer;
    height: var(--size);
    line-height: var(--size);
    width: auto;
    padding-left: var(--size);
    border-radius: $border-radius;

    &::before {
        content: "";
        position: absolute;
        top: 3px;
        left: 3px;
        height: 20px;
        width: 20px;
        background-color: $icon-button-color;
        mask-repeat: no-repeat;
        mask-size: contain;
        mask-position: center;
    }

    &::after {
        content: "";
        position: absolute;
        left: 0;
        top: 0;
        z-index: 0;
        width: var(--size);
        height: var(--size);
        border-radius: $border-radius;
    }

    &:hover {
        &::after {
            background: rgba($hover-color, 0.1);
        }

        &::before {
            background-color: $hover-color;
        }
    }
}

// resize bar
.mx_ResizeWrapper {
    .mx_ResizeHandle_horizontal::before {
        display: none;
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);

        height: 64px;
        width: 4px;
        border-radius: 4px;

        background-color: $primary-content;
        opacity: 0.8;
    }
    &:hover {
        .mx_ResizeHandle_horizontal::before {
            //display: block;
        }
    }
}

// rightPanel dialog
.mx_PanelView_dialog {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.12);
    .mx_PanelView_wrap {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        height: 0;
        background: #fff;
        border-radius: 20px 20px 0 0;
        overflow: hidden;
        transition: all 0.3s ease;
    }
    &.mx_PanelView_show {
        z-index: 1001; // 层级高于服务器连接丢失
        height: 100%;
        .mx_PanelView_wrap {
            height: 95%;
        }
    }
    &.mx_PanelView_hidden {
        z-index: -1;
        height: 0;
        transition: all 0s ease 0.3s;
    }
}



